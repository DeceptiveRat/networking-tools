Version 1.0
1. separated each layer function into separate header and c files.
	1.1 new files: ethernet.c, ethernet.h, ip.c, ip.h, tcp.c, tcp.h, udp.c, udp.h, dns.c, dns.h
2. added functions to print each layer.
	2.1 removed the now redundant decode functions for each layer
3. added function to remove a certain pointer in the allocated pointer list, file: otherFunctions.h.
4. now "pcap_handler_arguments", file: packetFunctions.h, is passed to "analyze_caught_packet", file: packetFunctions.h, instead of the previous FILE pointer. It contains a list of pointers to previously caught packets and the output FILE pointer.
5. "add_new_pointer", file: otherFunctions.h, now takes pointer to a pointer as the tail argument and sets it to point to the new tail if not null.
6. added function to remove all pointers in the allocated pointer list, file:otherFunctions.h.
7. all layer headers are now stored in host order, not just DNS
	7.1 ip source and destination address is stored in network byte order so "inet_ntop" can be used

Version 1.1
1. removed "pcap_fatal" function, file: packetSniffer.c.
2. added more elements to "pcap_handler_arguments", file: packetFunctions.h.
	2.1 rawOutputFilePtr: to print raw bytes of the function
3. when a packet is dropped because the checksum doesn't match, print the expected (calculated) checksum and the actual checksum for comparison.
	3.1 to do this, the "tcp/udp_checksum_matches" functions, file: tcp.h/udp.h, now take an additional argument to save the checksum to.
4. removed "dump" function, file: otherFunctions.h, and renamed "dump_to_file", file: otherFunctions.h, function to "dump".
5. removed "debug_dns_packet" function, file: dns.h, because it is now redundant.
6. removed all other structure for packets except "ethernet_packet" and renamed it to "packet_structure", file: packetFunctions.h.
7. the raw bytes of a packet is dumped to a different file now.

Version 2.0
1. Added a C proxy server
	1.1 changed some things to make it compatible with code from the packet sniffer
2. created separate directories for each tool
	2.1 the include directory contains common code files

